//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NodeSystemMatcher {

    static Entitas.IMatcher<NodeSystemEntity> _matcherGraphPlayer;

    public static Entitas.IMatcher<NodeSystemEntity> GraphPlayer {
        get {
            if (_matcherGraphPlayer == null) {
                var matcher = (Entitas.Matcher<NodeSystemEntity>)Entitas.Matcher<NodeSystemEntity>.AllOf(NodeSystemComponentsLookup.GraphPlayer);
                matcher.componentNames = NodeSystemComponentsLookup.componentNames;
                _matcherGraphPlayer = matcher;
            }

            return _matcherGraphPlayer;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NodeSystemEntity {

    public NodeBasedSystem.Nodes.GraphPlayerComponent graphPlayer { get { return (NodeBasedSystem.Nodes.GraphPlayerComponent)GetComponent(NodeSystemComponentsLookup.GraphPlayer); } }
    public Code.NodeBasedSystem.Core.NodeGraphPlayer.NodeGraphPlayer GraphPlayer { get { return graphPlayer.Value; } }
    public bool hasGraphPlayer { get { return HasComponent(NodeSystemComponentsLookup.GraphPlayer); } }

    public NodeSystemEntity AddGraphPlayer(Code.NodeBasedSystem.Core.NodeGraphPlayer.NodeGraphPlayer newValue) {
        var index = NodeSystemComponentsLookup.GraphPlayer;
        var component = (NodeBasedSystem.Nodes.GraphPlayerComponent)CreateComponent(index, typeof(NodeBasedSystem.Nodes.GraphPlayerComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public NodeSystemEntity ReplaceGraphPlayer(Code.NodeBasedSystem.Core.NodeGraphPlayer.NodeGraphPlayer newValue) {
        var index = NodeSystemComponentsLookup.GraphPlayer;
        var component = (NodeBasedSystem.Nodes.GraphPlayerComponent)CreateComponent(index, typeof(NodeBasedSystem.Nodes.GraphPlayerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public NodeSystemEntity RemoveGraphPlayer() {
        RemoveComponent(NodeSystemComponentsLookup.GraphPlayer);
        return this;
    }
}
