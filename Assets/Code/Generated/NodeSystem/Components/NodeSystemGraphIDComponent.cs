//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NodeSystemMatcher {

    static Entitas.IMatcher<NodeSystemEntity> _matcherGraphID;

    public static Entitas.IMatcher<NodeSystemEntity> GraphID {
        get {
            if (_matcherGraphID == null) {
                var matcher = (Entitas.Matcher<NodeSystemEntity>)Entitas.Matcher<NodeSystemEntity>.AllOf(NodeSystemComponentsLookup.GraphID);
                matcher.componentNames = NodeSystemComponentsLookup.componentNames;
                _matcherGraphID = matcher;
            }

            return _matcherGraphID;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NodeSystemEntity {

    public NodeBasedSystem.Nodes.GraphIDComponent graphID { get { return (NodeBasedSystem.Nodes.GraphIDComponent)GetComponent(NodeSystemComponentsLookup.GraphID); } }
    public string GraphID { get { return graphID.Value; } }
    public bool hasGraphID { get { return HasComponent(NodeSystemComponentsLookup.GraphID); } }

    public NodeSystemEntity AddGraphID(string newValue) {
        var index = NodeSystemComponentsLookup.GraphID;
        var component = (NodeBasedSystem.Nodes.GraphIDComponent)CreateComponent(index, typeof(NodeBasedSystem.Nodes.GraphIDComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public NodeSystemEntity ReplaceGraphID(string newValue) {
        var index = NodeSystemComponentsLookup.GraphID;
        var component = (NodeBasedSystem.Nodes.GraphIDComponent)CreateComponent(index, typeof(NodeBasedSystem.Nodes.GraphIDComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public NodeSystemEntity RemoveGraphID() {
        RemoveComponent(NodeSystemComponentsLookup.GraphID);
        return this;
    }
}
