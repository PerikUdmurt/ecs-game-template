//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NodeSystemMatcher {

    static Entitas.IMatcher<NodeSystemEntity> _matcherRemoveToken;

    public static Entitas.IMatcher<NodeSystemEntity> RemoveToken {
        get {
            if (_matcherRemoveToken == null) {
                var matcher = (Entitas.Matcher<NodeSystemEntity>)Entitas.Matcher<NodeSystemEntity>.AllOf(NodeSystemComponentsLookup.RemoveToken);
                matcher.componentNames = NodeSystemComponentsLookup.componentNames;
                _matcherRemoveToken = matcher;
            }

            return _matcherRemoveToken;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NodeSystemEntity {

    public Code.NodeBasedSystem.ProgressNodeComponents.RemoveTokenComponent removeToken { get { return (Code.NodeBasedSystem.ProgressNodeComponents.RemoveTokenComponent)GetComponent(NodeSystemComponentsLookup.RemoveToken); } }
    public string RemoveToken { get { return removeToken.Value; } }
    public bool hasRemoveToken { get { return HasComponent(NodeSystemComponentsLookup.RemoveToken); } }

    public NodeSystemEntity AddRemoveToken(string newValue) {
        var index = NodeSystemComponentsLookup.RemoveToken;
        var component = (Code.NodeBasedSystem.ProgressNodeComponents.RemoveTokenComponent)CreateComponent(index, typeof(Code.NodeBasedSystem.ProgressNodeComponents.RemoveTokenComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public NodeSystemEntity ReplaceRemoveToken(string newValue) {
        var index = NodeSystemComponentsLookup.RemoveToken;
        var component = (Code.NodeBasedSystem.ProgressNodeComponents.RemoveTokenComponent)CreateComponent(index, typeof(Code.NodeBasedSystem.ProgressNodeComponents.RemoveTokenComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public NodeSystemEntity RemoveRemoveToken() {
        RemoveComponent(NodeSystemComponentsLookup.RemoveToken);
        return this;
    }
}
