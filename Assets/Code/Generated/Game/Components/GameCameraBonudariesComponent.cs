//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraBonudaries;

    public static Entitas.IMatcher<GameEntity> CameraBonudaries {
        get {
            if (_matcherCameraBonudaries == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraBonudaries);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraBonudaries = matcher;
            }

            return _matcherCameraBonudaries;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Camera.RTS.CameraBonudaries cameraBonudaries { get { return (Code.Gameplay.Features.Camera.RTS.CameraBonudaries)GetComponent(GameComponentsLookup.CameraBonudaries); } }
    public Code.Gameplay.Features.Camera.RTS.CameraBoundariesData CameraBonudaries { get { return cameraBonudaries.Value; } }
    public bool hasCameraBonudaries { get { return HasComponent(GameComponentsLookup.CameraBonudaries); } }

    public GameEntity AddCameraBonudaries(Code.Gameplay.Features.Camera.RTS.CameraBoundariesData newValue) {
        var index = GameComponentsLookup.CameraBonudaries;
        var component = (Code.Gameplay.Features.Camera.RTS.CameraBonudaries)CreateComponent(index, typeof(Code.Gameplay.Features.Camera.RTS.CameraBonudaries));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCameraBonudaries(Code.Gameplay.Features.Camera.RTS.CameraBoundariesData newValue) {
        var index = GameComponentsLookup.CameraBonudaries;
        var component = (Code.Gameplay.Features.Camera.RTS.CameraBonudaries)CreateComponent(index, typeof(Code.Gameplay.Features.Camera.RTS.CameraBonudaries));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCameraBonudaries() {
        RemoveComponent(GameComponentsLookup.CameraBonudaries);
        return this;
    }
}
