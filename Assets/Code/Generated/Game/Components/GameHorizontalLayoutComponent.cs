//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHorizontalLayout;

    public static Entitas.IMatcher<GameEntity> HorizontalLayout {
        get {
            if (_matcherHorizontalLayout == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HorizontalLayout);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHorizontalLayout = matcher;
            }

            return _matcherHorizontalLayout;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Stack.HorizontalLayout horizontalLayout { get { return (Code.Gameplay.Features.Stack.HorizontalLayout)GetComponent(GameComponentsLookup.HorizontalLayout); } }
    public bool hasHorizontalLayout { get { return HasComponent(GameComponentsLookup.HorizontalLayout); } }

    public GameEntity AddHorizontalLayout(UnityEngine.Vector3 newDelta) {
        var index = GameComponentsLookup.HorizontalLayout;
        var component = (Code.Gameplay.Features.Stack.HorizontalLayout)CreateComponent(index, typeof(Code.Gameplay.Features.Stack.HorizontalLayout));
        component.Delta = newDelta;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHorizontalLayout(UnityEngine.Vector3 newDelta) {
        var index = GameComponentsLookup.HorizontalLayout;
        var component = (Code.Gameplay.Features.Stack.HorizontalLayout)CreateComponent(index, typeof(Code.Gameplay.Features.Stack.HorizontalLayout));
        component.Delta = newDelta;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHorizontalLayout() {
        RemoveComponent(GameComponentsLookup.HorizontalLayout);
        return this;
    }
}
