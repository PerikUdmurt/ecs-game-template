//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRTSCameraTargetRotation;

    public static Entitas.IMatcher<GameEntity> RTSCameraTargetRotation {
        get {
            if (_matcherRTSCameraTargetRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RTSCameraTargetRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRTSCameraTargetRotation = matcher;
            }

            return _matcherRTSCameraTargetRotation;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Camera.RTS.RTSCameraTargetRotation rTSCameraTargetRotation { get { return (Code.Gameplay.Features.Camera.RTS.RTSCameraTargetRotation)GetComponent(GameComponentsLookup.RTSCameraTargetRotation); } }
    public UnityEngine.Vector3 RTSCameraTargetRotation { get { return rTSCameraTargetRotation.Value; } }
    public bool hasRTSCameraTargetRotation { get { return HasComponent(GameComponentsLookup.RTSCameraTargetRotation); } }

    public GameEntity AddRTSCameraTargetRotation(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.RTSCameraTargetRotation;
        var component = (Code.Gameplay.Features.Camera.RTS.RTSCameraTargetRotation)CreateComponent(index, typeof(Code.Gameplay.Features.Camera.RTS.RTSCameraTargetRotation));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRTSCameraTargetRotation(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.RTSCameraTargetRotation;
        var component = (Code.Gameplay.Features.Camera.RTS.RTSCameraTargetRotation)CreateComponent(index, typeof(Code.Gameplay.Features.Camera.RTS.RTSCameraTargetRotation));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRTSCameraTargetRotation() {
        RemoveComponent(GameComponentsLookup.RTSCameraTargetRotation);
        return this;
    }
}
