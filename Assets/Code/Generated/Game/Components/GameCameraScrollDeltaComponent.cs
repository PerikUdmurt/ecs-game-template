//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraScrollDelta;

    public static Entitas.IMatcher<GameEntity> CameraScrollDelta {
        get {
            if (_matcherCameraScrollDelta == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraScrollDelta);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraScrollDelta = matcher;
            }

            return _matcherCameraScrollDelta;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Camera.RTS.CameraScrollDelta cameraScrollDelta { get { return (Code.Gameplay.Features.Camera.RTS.CameraScrollDelta)GetComponent(GameComponentsLookup.CameraScrollDelta); } }
    public float CameraScrollDelta { get { return cameraScrollDelta.Value; } }
    public bool hasCameraScrollDelta { get { return HasComponent(GameComponentsLookup.CameraScrollDelta); } }

    public GameEntity AddCameraScrollDelta(float newValue) {
        var index = GameComponentsLookup.CameraScrollDelta;
        var component = (Code.Gameplay.Features.Camera.RTS.CameraScrollDelta)CreateComponent(index, typeof(Code.Gameplay.Features.Camera.RTS.CameraScrollDelta));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCameraScrollDelta(float newValue) {
        var index = GameComponentsLookup.CameraScrollDelta;
        var component = (Code.Gameplay.Features.Camera.RTS.CameraScrollDelta)CreateComponent(index, typeof(Code.Gameplay.Features.Camera.RTS.CameraScrollDelta));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCameraScrollDelta() {
        RemoveComponent(GameComponentsLookup.CameraScrollDelta);
        return this;
    }
}
