//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHorizontalElementArrangement;

    public static Entitas.IMatcher<GameEntity> HorizontalElementArrangement {
        get {
            if (_matcherHorizontalElementArrangement == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HorizontalElementArrangement);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHorizontalElementArrangement = matcher;
            }

            return _matcherHorizontalElementArrangement;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Stack.HorizontalElementArrangement horizontalElementArrangement { get { return (Code.Gameplay.Features.Stack.HorizontalElementArrangement)GetComponent(GameComponentsLookup.HorizontalElementArrangement); } }
    public bool hasHorizontalElementArrangement { get { return HasComponent(GameComponentsLookup.HorizontalElementArrangement); } }

    public GameEntity AddHorizontalElementArrangement(UnityEngine.Vector3 newDelta) {
        var index = GameComponentsLookup.HorizontalElementArrangement;
        var component = (Code.Gameplay.Features.Stack.HorizontalElementArrangement)CreateComponent(index, typeof(Code.Gameplay.Features.Stack.HorizontalElementArrangement));
        component.Delta = newDelta;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHorizontalElementArrangement(UnityEngine.Vector3 newDelta) {
        var index = GameComponentsLookup.HorizontalElementArrangement;
        var component = (Code.Gameplay.Features.Stack.HorizontalElementArrangement)CreateComponent(index, typeof(Code.Gameplay.Features.Stack.HorizontalElementArrangement));
        component.Delta = newDelta;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHorizontalElementArrangement() {
        RemoveComponent(GameComponentsLookup.HorizontalElementArrangement);
        return this;
    }
}
