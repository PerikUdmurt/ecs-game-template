//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRigidbody3D;

    public static Entitas.IMatcher<GameEntity> Rigidbody3D {
        get {
            if (_matcherRigidbody3D == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Rigidbody3D);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRigidbody3D = matcher;
            }

            return _matcherRigidbody3D;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Common.Unity.Rigidbody3D rigidbody3D { get { return (Code.Common.Unity.Rigidbody3D)GetComponent(GameComponentsLookup.Rigidbody3D); } }
    public UnityEngine.Rigidbody Rigidbody3D { get { return rigidbody3D.Value; } }
    public bool hasRigidbody3D { get { return HasComponent(GameComponentsLookup.Rigidbody3D); } }

    public GameEntity AddRigidbody3D(UnityEngine.Rigidbody newValue) {
        var index = GameComponentsLookup.Rigidbody3D;
        var component = (Code.Common.Unity.Rigidbody3D)CreateComponent(index, typeof(Code.Common.Unity.Rigidbody3D));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRigidbody3D(UnityEngine.Rigidbody newValue) {
        var index = GameComponentsLookup.Rigidbody3D;
        var component = (Code.Common.Unity.Rigidbody3D)CreateComponent(index, typeof(Code.Common.Unity.Rigidbody3D));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRigidbody3D() {
        RemoveComponent(GameComponentsLookup.Rigidbody3D);
        return this;
    }
}
