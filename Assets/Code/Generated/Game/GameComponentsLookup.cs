//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Animator = 1;
    public const int AudioSource = 2;
    public const int NavMeshAgent = 3;
    public const int Rigidbody = 4;
    public const int Rigidbody2D = 5;
    public const int Rigidbody3D = 6;
    public const int SpriteRenderer = 7;
    public const int Transform = 8;
    public const int View = 9;
    public const int ViewPath = 10;
    public const int ViewPrefab = 11;
    public const int Id = 12;
    public const int WorldPosition = 13;
    public const int Camera = 14;
    public const int CameraSelector = 15;
    public const int Card = 16;
    public const int Character = 17;
    public const int Dragable = 18;
    public const int Dragging = 19;
    public const int DragLerp = 20;
    public const int BleedingEffect = 21;
    public const int BurningEffect = 22;
    public const int DamageEffect = 23;
    public const int Effect = 24;
    public const int EffectProducerId = 25;
    public const int EffectSetups = 26;
    public const int EffectTargetId = 27;
    public const int EffectValue = 28;
    public const int Interactive = 29;
    public const int CurrentHp = 30;
    public const int Dead = 31;
    public const int MaxHp = 32;
    public const int ProcessingDeath = 33;
    public const int Acceleration = 34;
    public const int Direction = 35;
    public const int MoveTargetPosition = 36;
    public const int Moving = 37;
    public const int Speed = 38;
    public const int AxisInput = 39;
    public const int Input = 40;
    public const int Clackable = 41;
    public const int Clicked = 42;
    public const int Selectable = 43;
    public const int MousePosition = 44;
    public const int AssetIsLoading = 45;
    public const int Selected = 46;

    public const int TotalComponents = 47;

    public static readonly string[] componentNames = {
        "Destructed",
        "Animator",
        "AudioSource",
        "NavMeshAgent",
        "Rigidbody",
        "Rigidbody2D",
        "Rigidbody3D",
        "SpriteRenderer",
        "Transform",
        "View",
        "ViewPath",
        "ViewPrefab",
        "Id",
        "WorldPosition",
        "Camera",
        "CameraSelector",
        "Card",
        "Character",
        "Dragable",
        "Dragging",
        "DragLerp",
        "BleedingEffect",
        "BurningEffect",
        "DamageEffect",
        "Effect",
        "EffectProducerId",
        "EffectSetups",
        "EffectTargetId",
        "EffectValue",
        "Interactive",
        "CurrentHp",
        "Dead",
        "MaxHp",
        "ProcessingDeath",
        "Acceleration",
        "Direction",
        "MoveTargetPosition",
        "Moving",
        "Speed",
        "AxisInput",
        "Input",
        "Clackable",
        "Clicked",
        "Selectable",
        "MousePosition",
        "AssetIsLoading",
        "Selected"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Unity.Animator),
        typeof(Code.Common.Unity.AudioSource),
        typeof(Code.Common.Unity.NavMeshAgent),
        typeof(Code.Common.Unity.Rigidbody),
        typeof(Code.Common.Unity.Rigidbody2D),
        typeof(Code.Common.Unity.Rigidbody3D),
        typeof(Code.Common.Unity.SpriteRenderer),
        typeof(Code.Common.Unity.Transform),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewPath),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.Id),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.Camera.CameraComponent),
        typeof(Code.Gameplay.Features.Camera.CameraSelectorComponent),
        typeof(Code.Gameplay.Features.Cards.CardComponent),
        typeof(Code.Gameplay.Features.Characters.CharacterComponent),
        typeof(Code.Gameplay.Features.Dragable.DragableComponent),
        typeof(Code.Gameplay.Features.Dragable.DraggingComponent),
        typeof(Code.Gameplay.Features.Dragable.DragLerpComponent),
        typeof(Code.Gameplay.Features.Effects.BleedingEffectComponent),
        typeof(Code.Gameplay.Features.Effects.BurningEffectComponent),
        typeof(Code.Gameplay.Features.Effects.DamageEffectComponent),
        typeof(Code.Gameplay.Features.Effects.EffectComponent),
        typeof(Code.Gameplay.Features.Effects.EffectProducerIdComponent),
        typeof(Code.Gameplay.Features.Effects.EffectSetupsComponent),
        typeof(Code.Gameplay.Features.Effects.EffectTargetIdComponent),
        typeof(Code.Gameplay.Features.Effects.EffectValueComponent),
        typeof(Code.Gameplay.Features.InteractiveObjects.InteractiveComponent),
        typeof(Code.Gameplay.Features.LifeTime.CurrentHp),
        typeof(Code.Gameplay.Features.LifeTime.Dead),
        typeof(Code.Gameplay.Features.LifeTime.MaxHp),
        typeof(Code.Gameplay.Features.LifeTime.ProcessingDeath),
        typeof(Code.Gameplay.Features.Movement.Acceleration),
        typeof(Code.Gameplay.Features.Movement.Direction),
        typeof(Code.Gameplay.Features.Movement.MoveTargetPosition),
        typeof(Code.Gameplay.Features.Movement.Moving),
        typeof(Code.Gameplay.Features.Movement.Speed),
        typeof(Code.Gameplay.Input.AxisInput),
        typeof(Code.Gameplay.Input.Input),
        typeof(Code.Gameplay.Input.Mouse.Clickable.ClackableComponent),
        typeof(Code.Gameplay.Input.Mouse.Clickable.ClickedComponent),
        typeof(Code.Gameplay.Input.Mouse.Selectable.SelectableComponent),
        typeof(Code.Gameplay.Input.MousePosition),
        typeof(Code.Infrastructures.View.AssetIsLoading),
        typeof(SelectedComponent)
    };
}
